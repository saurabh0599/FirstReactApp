{"version":3,"sources":["logo.svg","CustomTags/Alert.js","CustomTags/Navbar.js","CustomTags/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Alert","props","alert","React","createElement","class","concat","type","role","message","Navbar","className","mode","href","tittle","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","aria-labelledby","tabIndex","aria-disabled","onClick","toggleMode","htmlFor","text","redmode","redToggleMode","style","color","redText","TextArea","setText","useState","includeSpaces","setIncludeSpaces","btnText","setbtnText","enablemode","setenableMode","backgroundColor","border","heading","value","onChange","event","console","log","target","rows","changeUpperText","showAlert","newText","toUpperCase","changeClearText","clearExtraSpace","replace","trim","copyText","document","getElementById","select","navigator","clipboard","writeText","checked","handleSwitchChange","split","filter","word","join","length","prototype","PropTypes","string","defaultProps","title","App","setMode","setredText","setAlert","setredMode","setTimeout","body","Fragment","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.01b0cc81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\n\r\n\r\n function Alert(props){\r\n    return(\r\nprops.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n{props.alert.message}\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default Alert;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Alert from './Alert'\r\n\r\nexport default function Navbar(props){\r\n  \r\n    return (\r\n        <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.tittle}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n          </li>\r\n        </ul>\r\n     {/*    <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input \" type=\"checkbox\" onClick={props.toggleMode} id=\"mode\" />\r\n          <label className=\" count form-check-label \" htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n         </div>\r\n         <div className={`form-check form-switch mx-2 text-${props.redmode==='light'?'red':'light'}`}>\r\n          <input className=\"form-check-input \" type=\"checkbox\" onClick={props.redToggleMode} id=\"mode2\" />\r\n          <label className=\" count form-check-label \" style={{color: 'black'}} htmlFor=\"flexSwitchCheckDefault\">{props.redText}</label>\r\n         </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\nNavbar.prototype={\r\n    tittle: PropTypes.string,\r\n    about: PropTypes.about\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: \"Set title\"\r\n}","import React, { useState } from 'react'\r\nimport '../App.css';\r\n\r\nexport default function TextArea(props) {\r\n  const changeUpperText = () => {\r\n    if(text==='')\r\n    {\r\n      props.showAlert('Please Enter Your text!!','danger')\r\n    }\r\n    else{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert('Upper case done!!','success')\r\n    console.log(\"uppper case clicked\");\r\n    }\r\n\r\n  }\r\n  const changeClearText = () => {\r\n    setText('')\r\n  }\r\n\r\n  const clearExtraSpace = () => {\r\n    let newText = text.replace(/\\s+/g, ' ').trim();\r\n    props.showAlert('Remove Extra spaces!!','success')\r\n    setText(newText)\r\n  }\r\n\r\n  const handleSwitchChange = () => {\r\n    setIncludeSpaces(!includeSpaces);\r\n  };\r\n\r\n\r\n  const countWords = () => {\r\n    if (!includeSpaces) {\r\n      // Split by any whitespace character\r\n      return text.split(/\\s+/).filter((word) => word !== '').length;\r\n    } else {\r\n      // Split only by non-whitespace characters\r\n      return text.split(/\\s+/).filter((word) => word !== '').join('').length;\r\n    }\r\n  };\r\n\r\n\r\n  const handleOnchange = (event) => {\r\n    console.log(\"on changed\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleOnModechange = (event) => {\r\n    console.log(\"on changed\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleMode = () => {\r\n    if (enablemode.color === 'black') {\r\n      setenableMode({\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        border: '1px solid white'\r\n      })\r\n      setbtnText('Enable light Mode')\r\n    }\r\n    else {\r\n      setenableMode({\r\n        color: 'black',\r\n        backgroundColor: 'white',\r\n        border: '1px solid black'\r\n      })\r\n      setbtnText('Enable Dark Mode')\r\n    }\r\n  }\r\n\r\nconst copyText = () => {\r\n  var text=document.getElementById(\"mybox\");\r\n  text.select();\r\n  navigator.clipboard.writeText(text.value);\r\n  props.showAlert('Copied Successfully!!','success')\r\n}\r\n\r\nconst [text, setText] = useState('');\r\nconst [includeSpaces, setIncludeSpaces] = useState(true);\r\nconst[btnText,setbtnText]=useState('Enable dark mode');\r\nconst [enablemode, setenableMode] = useState({\r\n  color: 'black',\r\n  backgroundColor: 'white',\r\n  border: '1px solid black'\r\n})\r\nreturn (\r\n  <div>\r\n    <h1 className='heading' style={{color: props.mode==='light'?'black': 'white'}}>{props.heading}</h1>\r\n    <div className='container'>\r\n      <div className=\"form-group\">\r\n        <textarea className=\"form-control my-4\"    style={{backgroundColor: props.mode==='light'?'white': '#dedff3'}}  value={text} onChange={handleOnchange} id=\"mybox\" rows=\"14\"></textarea>\r\n        <button className={`btn btn-${props.redmode==='light'?'primary':'success'} mx-3`} onClick={changeUpperText}>Convert to UpperCase</button>\r\n        <button className={`btn btn-${props.redmode==='light'?'primary':'success'} mx-3`} onClick={changeClearText}>Clear Text</button>\r\n        <button className={`btn btn-${props.redmode==='light'?'primary':'success'} mx-3`} onClick={clearExtraSpace}>Clear Extra Space</button>\r\n        <button className={`btn btn-${props.redmode==='light'?'primary':'success'} mx-3`} onClick={copyText}>Copy Text</button>\r\n      </div>\r\n      <div className='container my-3'>\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input \" type=\"checkbox\" checked={includeSpaces} onClick={handleSwitchChange} id=\"flexSwitchCheckDefault\" />\r\n          <label className=\" count form-check-label \" style={{color: props.mode==='light'?'black': 'white'}}  htmlFor=\"flexSwitchCheckDefault\">Include spaces</label>\r\n          <p className=' count my-3' style={{color: props.mode==='light'?'black': 'white'}}> No of words count {countWords()} No of character count {text.length}</p>\r\n</div>\r\n</div>\r\n\r\n{/* <div className='container my-3'>\r\n<div className='form-check form-switch'>\r\n          <input className=\"form-check-input \" type=\"checkbox\" onClick={handleMode} id=\"mode\" />\r\n          <label className=\" count form-check-label \" htmlFor=\"flexSwitchCheckDefault\">{btnText}</label>\r\n         </div>\r\n         </div> */}\r\n         </div>\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n)\r\n\r\n\r\n}\r\n","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport Navbar from './CustomTags/Navbar';\nimport TextArea  from './CustomTags/TextArea';\nimport ReactDOM from \"react-dom\";\nimport { useState } from 'react';\nimport Alert from './CustomTags/Alert';\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[btnText,setbtnText]=useState('Enable dark mode');\n  const[redText,setredText]=useState('Enable red mode');\n  const[alert,setAlert]=useState(false);\n  const[redmode,setredMode]=useState('light');\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n    \n\n  const [enablemode, setenableMode] = useState({\n    color: 'black',\n    backgroundColor: 'white',\n    border: '1px solid black'\n\n  })\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      setbtnText('Enable light Mode');\n      document.body.style.backgroundColor ='#13152a'\n      showAlert('Enable dark mode','success')\n    }\n    else{\n      setMode('light');\n      setbtnText('Enable Dark Mode');\n      document.body.style.backgroundColor ='white'\n      showAlert('Enable light mode','success')\n    }\n  }\n  const redToggleMode =()=>{\n    if(redmode==='light'){\n      setredMode('red');\n      setredText('Enable light Mode');\n      document.body.style.backgroundColor ='#eaac9b'\n      showAlert('Enable red mode','success')\n    }\n    else{\n      setredMode('light');\n      setredText('Enable red Mode');\n      document.body.style.backgroundColor ='white'\n      showAlert('Enable light mode','success')\n    }\n  }\n  return (\n    <>\n    <Navbar tittle=\"TextUtils\" mode={mode} redmode={redmode} toggleMode={toggleMode} text={btnText} redText={redText} redToggleMode={redToggleMode} about=\"About Us\"/>\n    <Alert alert={alert}/>\n    <TextArea showAlert={showAlert} mode={mode} toggleMode={toggleMode} redToggleMode={redToggleMode} redmode={redmode} heading =\"Text Changer\"/>\n    \n\n    </>\n  );\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}